<!-- <:>
<script>
import React, { useEffect } from 'react';
interface ConsoleTextProps {
  words: string[];
  id: string;
  colors?: string[];
}

const ConsoleText: React.FC<ConsoleTextProps> = ({ words, id, colors = ['#fff'] }) => {
  // The screen width threshold below which the animation will be shown
  const screenWidthThreshold = 768;

  // Check if the screen width is below the threshold
  const isSmallScreen = window.innerWidth < screenWidthThreshold;

  useEffect(() => {
    if (!isSmallScreen) {
      // If the screen is not small, display nothing (an empty string)
      const target = document.getElementById(id);
      if (target) {
        target.innerHTML = '';
      }
      return;
    }

    // If the screen is small, proceed with the animation
    if (colors === undefined || colors.length === 0) {
      colors = ['#fff'];
    }
    let visible = true;
    let con = document.getElementById('console');
    let letterCount = 1;
    let x = 1;
    let waiting = false;
    let stringCount = 0;
    const target = document.getElementById(id);

    if (target) {
      target.setAttribute('style', `color: ${colors[0]}`);
    }

    const textInterval = window.setInterval(() => {
      if (stringCount === 2) {
        if (target) {
          target.innerHTML = 'About Me.';
        }
        // Hide the cursor and stop the function
        if (con) {
          con.style.display = 'none';
        }
        clearInterval(textInterval);
        return;
      }
      if (letterCount === 0 && !waiting) {
        waiting = true;
        if (target) {
          target.innerHTML = words[0].substring(0, letterCount);
        }
        window.setTimeout(() => {
          const usedColor = colors.shift();
          colors.push(usedColor as string);
          const usedWord = words.shift();
          words.push(usedWord as string);
          x = 1;
          if (target) {
            target.setAttribute('style', `color: ${colors[0]}`);
            letterCount += x;
            waiting = false;
          }
        }, 1000);
      } else if (letterCount === words[0].length + 1 && !waiting) {
        stringCount++;
        waiting = true;
        window.setTimeout(() => {
          x = -1;
          letterCount += x;
          waiting = false;
        }, 1000);
      } else if (!waiting && target) {
        target.innerHTML = words[0].substring(0, letterCount);
        letterCount += x;
      }
    }, 120);

    const cursorInterval = window.setInterval(() => {
      if (visible && con) {
        con.className = 'console-underscore hidden';
        visible = false;
      } else if (con) {
        con.className = 'console-underscore';
        visible = true;
      }
    }, 400);

    return () => {
      clearInterval(textInterval);
      clearInterval(cursorInterval);
    };
  }, [id, words, colors, isSmallScreen]);

  return null;
};

export default ConsoleText;
</script>
</:>

 -->
